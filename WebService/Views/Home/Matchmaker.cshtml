<!DOCTYPE html>
<html>
<head>
    <title>mk.js</title>
    <script src="~/lib/signalr/signalr.js"></script>
    <script src="~/js/matchmaker.js?v=4"></script>
    <script src="~/js/test.js?v=1"></script>
    @*<script src="/socket.io/socket.io.js"></script>*@
    <link rel="stylesheet" href="~/css/styles.css" />
</head>
<body>
    <table>
        <thead>
        <th>
            Arena
        </th>
        </thead>
        <tbody>
            <tr>
                <td>
                    <div id="parent">
                        <div id="utils">
                            <div id="player1Name" class="playerName">Sub-Zero</div>
                            <div id="player1LifeBar" class="lifebar"><div class="life" id="player1Life"></div></div>
                            <div id="player2Name" class="playerName">Kano</div>
                            <div id="player2LifeBar" class="lifebar"><div class="life" id="player2Life"></div></div>
                        </div>
                        <div id="arena">
                        </div>
                        <div id="loading">
                            <span class="loadingLabel">LOADING...</span>
                        </div>
                    </div>
                </td>
                <td id="webcam-parent">
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <h1>How to play</h1>
                    <ul>
                        <li>Use arrows to move</li>
                        <li>Press "A" for high-punch</li>
                        <li>Press "S" for low-punch</li>
                        <li>Press "D" for low-kick</li>
                        <li>Press "F" for high-kick</li>
                        <li>Press "Space" restart</li>
                    </ul>
                </td>
            </tr>
        </tbody>
    </table>
    <div class="manual">
    </div>

        <script>
            (function () {

                function $(id) {
                    return document.getElementById(id);
                }

                function setLife(container, life) {
                    container.style.width = life + '%';
                }

                function setName(container, name) {
                    container.innerHTML = name;
                }

                document.onkeydown = function (e) {
                    if (e.keyCode === 32) {
                        window.location.reload();
                    }
                };

                (function () {

                    var startGame = function () {
                        $('loading').style.visibility = 'hidden';
                        $('arena').style.visibility = 'visible';
                        $('utils').style.visibility = 'visible';
                    };

                    var options = {
                        arena: {
                            container: document.getElementById('arena'),
                            arena: mk.arenas.types.THRONE_ROOM
                        },
                        fighters: [{ name: 'Subzero' }, { name: 'Kano' }],
                        callbacks: {
                            attack: function (f, o, l) {
                                if (o.getName() === 'kano') {
                                    setLife($('player2Life'), o.getLife());
                                } else {
                                    setLife($('player1Life'), o.getLife());
                                }
                            },
                            gameStarted: function (player1Name, player2Name, isReconnect) {
                                setName($('player1Name'), player1Name);
                                setName($('player2Name'), player2Name);

                                $('loading').style.visibility = 'visible';
                                $('loading').children[0].innerHTML = isReconnect ? 'RECONNECTED TO THE GAME' : 'GAME STARTED';

                                setTimeout(function () {
                                    $('loading').style.visibility = 'hidden';
                                    $('loading').children[0].innerHTML = 'LOADING...';
                                }, 2000);
                            },
                            setLife: function (player, life) {
                                if (player == 0) {
                                    setLife($('player1Life'), life);
                                }
                                else if (player == 1) {
                                    setLife($('player2Life'), life);
                                }
                            }
                        },
                        isHost: /^yes$//*i.test(prompt('Are you going to be host?'))*/,
                        userName: prompt('Enter user name:'),
                        gameType: 'network'
                    };

                    function startNewGame() {
                        mk.start(options).ready(function () {
                            startGame();
                        });
                    }

                    startNewGame();

                }());

            }());
        </script>
    </body>
</html>
